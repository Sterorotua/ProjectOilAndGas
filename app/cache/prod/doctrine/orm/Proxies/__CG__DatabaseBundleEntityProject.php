<?php

namespace Proxies\__CG__\DatabaseBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \DatabaseBundle\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectName', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'summary', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'realContract', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'licensingDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'discoveryDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'geophysicsDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'fidDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'drillingDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'developmentDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'operationalDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'nextTenderIssue', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'nextTenderClosed', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractAward', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'helicopterOpsDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractEndQuarter', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractEndYear', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractStartDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'options', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'optionsComment', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectLevel', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'confidentialLink', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'externalLink', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'circuit', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'aircraftFleet', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'helicopterFleet', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectComments', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectStatus', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'oilCompany', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'base', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'operatorGroup', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'country', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'missionAreas'];
        }

        return ['__isInitialized__', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectName', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'summary', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'realContract', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'licensingDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'discoveryDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'geophysicsDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'fidDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'drillingDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'developmentDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'operationalDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'nextTenderIssue', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'nextTenderClosed', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractAward', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'helicopterOpsDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractEndQuarter', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractEndYear', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'contractStartDate', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'options', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'optionsComment', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectLevel', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'confidentialLink', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'externalLink', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'circuit', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'aircraftFleet', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'helicopterFleet', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectComments', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'projectStatus', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'oilCompany', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'base', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'operatorGroup', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'country', '' . "\0" . 'DatabaseBundle\\Entity\\Project' . "\0" . 'missionAreas'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectName($projectName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectName', [$projectName]);

        return parent::setProjectName($projectName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectName', []);

        return parent::getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealContract($realContract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealContract', [$realContract]);

        return parent::setRealContract($realContract);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealContract()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealContract', []);

        return parent::getRealContract();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicensingDate($licensingDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicensingDate', [$licensingDate]);

        return parent::setLicensingDate($licensingDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicensingDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicensingDate', []);

        return parent::getLicensingDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFidDate($fidDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFidDate', [$fidDate]);

        return parent::setFidDate($fidDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getFidDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFidDate', []);

        return parent::getFidDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDrillingDate($drillingDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDrillingDate', [$drillingDate]);

        return parent::setDrillingDate($drillingDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDrillingDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDrillingDate', []);

        return parent::getDrillingDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNextTenderIssue($nextTenderIssue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNextTenderIssue', [$nextTenderIssue]);

        return parent::setNextTenderIssue($nextTenderIssue);
    }

    /**
     * {@inheritDoc}
     */
    public function getNextTenderIssue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNextTenderIssue', []);

        return parent::getNextTenderIssue();
    }

    /**
     * {@inheritDoc}
     */
    public function setNextTenderClosed($nextTenderClosed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNextTenderClosed', [$nextTenderClosed]);

        return parent::setNextTenderClosed($nextTenderClosed);
    }

    /**
     * {@inheritDoc}
     */
    public function getNextTenderClosed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNextTenderClosed', []);

        return parent::getNextTenderClosed();
    }

    /**
     * {@inheritDoc}
     */
    public function setContractAward($contractAward)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContractAward', [$contractAward]);

        return parent::setContractAward($contractAward);
    }

    /**
     * {@inheritDoc}
     */
    public function getContractAward()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContractAward', []);

        return parent::getContractAward();
    }

    /**
     * {@inheritDoc}
     */
    public function setHelicopterOpsDate($helicopterOpsDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHelicopterOpsDate', [$helicopterOpsDate]);

        return parent::setHelicopterOpsDate($helicopterOpsDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getHelicopterOpsDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHelicopterOpsDate', []);

        return parent::getHelicopterOpsDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setContractEndQuarter($contractEndQuarter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContractEndQuarter', [$contractEndQuarter]);

        return parent::setContractEndQuarter($contractEndQuarter);
    }

    /**
     * {@inheritDoc}
     */
    public function getContractEndQuarter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContractEndQuarter', []);

        return parent::getContractEndQuarter();
    }

    /**
     * {@inheritDoc}
     */
    public function setContractEndYear($contractEndYear)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContractEndYear', [$contractEndYear]);

        return parent::setContractEndYear($contractEndYear);
    }

    /**
     * {@inheritDoc}
     */
    public function getContractEndYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContractEndYear', []);

        return parent::getContractEndYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions($options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', [$options]);

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', []);

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptionsComment($optionsComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptionsComment', [$optionsComment]);

        return parent::setOptionsComment($optionsComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptionsComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptionsComment', []);

        return parent::getOptionsComment();
    }

    /**
     * {@inheritDoc}
     */
    public function addCircuit(\DatabaseBundle\Entity\ProjectCircuit $circuit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCircuit', [$circuit]);

        return parent::addCircuit($circuit);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCircuit(\DatabaseBundle\Entity\ProjectCircuit $circuit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCircuit', [$circuit]);

        return parent::removeCircuit($circuit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCircuit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCircuit', []);

        return parent::getCircuit();
    }

    /**
     * {@inheritDoc}
     */
    public function addAircraftFleet(\DatabaseBundle\Entity\AircraftFleet $aircraftFleet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAircraftFleet', [$aircraftFleet]);

        return parent::addAircraftFleet($aircraftFleet);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAircraftFleet(\DatabaseBundle\Entity\AircraftFleet $aircraftFleet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAircraftFleet', [$aircraftFleet]);

        return parent::removeAircraftFleet($aircraftFleet);
    }

    /**
     * {@inheritDoc}
     */
    public function getAircraftFleet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAircraftFleet', []);

        return parent::getAircraftFleet();
    }

    /**
     * {@inheritDoc}
     */
    public function addHelicopterFleet(\DatabaseBundle\Entity\HelicopterFleet $helicopterFleet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHelicopterFleet', [$helicopterFleet]);

        return parent::addHelicopterFleet($helicopterFleet);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHelicopterFleet(\DatabaseBundle\Entity\HelicopterFleet $helicopterFleet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHelicopterFleet', [$helicopterFleet]);

        return parent::removeHelicopterFleet($helicopterFleet);
    }

    /**
     * {@inheritDoc}
     */
    public function getHelicopterFleet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHelicopterFleet', []);

        return parent::getHelicopterFleet();
    }

    /**
     * {@inheritDoc}
     */
    public function addProjectComment(\DatabaseBundle\Entity\ProjectComment $projectComments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProjectComment', [$projectComments]);

        return parent::addProjectComment($projectComments);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProjectComment(\DatabaseBundle\Entity\ProjectComment $projectComments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProjectComment', [$projectComments]);

        return parent::removeProjectComment($projectComments);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectComments', []);

        return parent::getProjectComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectStatus(\DatabaseBundle\Entity\ProjectStatus $projectStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectStatus', [$projectStatus]);

        return parent::setProjectStatus($projectStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectStatus', []);

        return parent::getProjectStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setOilCompany(\DatabaseBundle\Entity\OilCompany $oilCompany)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOilCompany', [$oilCompany]);

        return parent::setOilCompany($oilCompany);
    }

    /**
     * {@inheritDoc}
     */
    public function getOilCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOilCompany', []);

        return parent::getOilCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setBase(\DatabaseBundle\Entity\Base $base)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBase', [$base]);

        return parent::setBase($base);
    }

    /**
     * {@inheritDoc}
     */
    public function getBase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBase', []);

        return parent::getBase();
    }

    /**
     * {@inheritDoc}
     */
    public function setOperatorGroup(\DatabaseBundle\Entity\OperatorGroup $operatorGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOperatorGroup', [$operatorGroup]);

        return parent::setOperatorGroup($operatorGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperatorGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperatorGroup', []);

        return parent::getOperatorGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\DatabaseBundle\Entity\Country $country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function addMissionArea(\DatabaseBundle\Entity\MissionArea $missionArea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMissionArea', [$missionArea]);

        return parent::addMissionArea($missionArea);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMissionArea(\DatabaseBundle\Entity\MissionArea $missionArea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMissionArea', [$missionArea]);

        return parent::removeMissionArea($missionArea);
    }

    /**
     * {@inheritDoc}
     */
    public function getMissionAreas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMissionAreas', []);

        return parent::getMissionAreas();
    }

    /**
     * {@inheritDoc}
     */
    public function setSummary($summary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSummary', [$summary]);

        return parent::setSummary($summary);
    }

    /**
     * {@inheritDoc}
     */
    public function getSummary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSummary', []);

        return parent::getSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscoveryDate($discoveryDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscoveryDate', [$discoveryDate]);

        return parent::setDiscoveryDate($discoveryDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscoveryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscoveryDate', []);

        return parent::getDiscoveryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeophysicsDate($geophysicsDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeophysicsDate', [$geophysicsDate]);

        return parent::setGeophysicsDate($geophysicsDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeophysicsDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeophysicsDate', []);

        return parent::getGeophysicsDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDevelopmentDate($developmentDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDevelopmentDate', [$developmentDate]);

        return parent::setDevelopmentDate($developmentDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDevelopmentDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDevelopmentDate', []);

        return parent::getDevelopmentDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setOperationalDate($operationalDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOperationalDate', [$operationalDate]);

        return parent::setOperationalDate($operationalDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperationalDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperationalDate', []);

        return parent::getOperationalDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setContractStartDate($contractStartDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContractStartDate', [$contractStartDate]);

        return parent::setContractStartDate($contractStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getContractStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContractStartDate', []);

        return parent::getContractStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectLevel($projectLevel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectLevel', [$projectLevel]);

        return parent::setProjectLevel($projectLevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectLevel', []);

        return parent::getProjectLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfidentialLink($confidentialLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfidentialLink', [$confidentialLink]);

        return parent::setConfidentialLink($confidentialLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfidentialLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfidentialLink', []);

        return parent::getConfidentialLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalLink($externalLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalLink', [$externalLink]);

        return parent::setExternalLink($externalLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalLink', []);

        return parent::getExternalLink();
    }

}
